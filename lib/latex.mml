open Maths;;
open List;;

let render x = match x with
    (s, true) -> "("++s++")"
  | (s, false) -> s
;;

let rec to_latex' var f = match f with
   Const (Num x) -> (string_of_int x, false)
  | Id -> (var, false)
  | @sqrt . f -> ("\sqrt{"++fst (to_latex' var f)++"}", false)
  | @exp . f ->  ("\exp{"++render (to_latex' var f)++"}", false)
  | @ln . f ->  ("\ln{"++render (to_latex' var f)++"}", false)
  | @cos . f ->  ("\cos{"++render (to_latex' var f)++"}", false)
  | @sin . f ->  ("\sin{"++render (to_latex' var f)++"}", false)

  | _ + _ -> (concat_strings "+" (map (\x -> fst (to_latex' var x)) (decompose_sum f)), true)
  | f * g -> 
    let f' = to_latex' var f in
    let g' = to_latex' var g in
    ((render f') ++ "*" ++ (render g'), false)
  | f / g ->  ("\frac{" ++  (fst (to_latex' var f)) ++ "}{" ++  (fst (to_latex' var g)) ++ "}", false)
  | f ^ g -> 
    let f' = to_latex' var f in
    ( (render f') ++ "^{" ++ (fst (to_latex' var g)) ++ "}", false)
;;

let to_latex f = fst (to_latex' "x" f);;
